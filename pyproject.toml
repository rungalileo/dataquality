[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "dataquality"
version = "1.1.1"
description = ""
authors = ["Galileo Technologies, Inc. <devs+dq@rungalileo.io>"]
readme = "README.md"
license = "See LICENSE"
homepage = "https://github.com/rungalileo/dataquality"
documentation = "https://rungalileo.gitbook.io/galileo"
scripts = { dqyolo = "dataquality.dqyolo:main" }

[tool.poetry.dependencies]
python = "^3.8,<3.12"
pydantic = "^1.8.2,<2.0.0"
requests = "^2.25.1"
types-requests = "^2.25.2"
pandas = "^1.0.0"
pyarrow = "^6.0.0"
vaex-core = "4.16.0"
vaex-hdf5 = "^0.12,<0.13"
diskcache = "^5.2.1"
resource = "^0.2.1"
tqdm = "^4.62.3"
blake3 = "^0.2.1"
wrapt = "^1.13.3"
scipy = "^1.7.0"
cachetools = "^4.2.4"
importlib-metadata = "<6.0.1"
datasets = "^2.6"
transformers = "^4.17.0"
seqeval = "*"
sentence-transformers = "^2.2"
Pillow = "*"
h5py = "^3.1.0"
numpy = "<1.24.0"
tenacity = "^8.1.0"
evaluate = "*"
accelerate = "^0.20.3"
ipywidgets = "^8.1.0"
imagededup = "^0.3.1,<0.3.2"

[tool.poetry.group.dev.dependencies]
mypy = "^1.0.0"
ruff = "^0.0.98"
black = "^23.1.0"
jupyter = "1.0.0"
invoke = "^1.6.0"

# [tool.poetry.group.cuda.dependencies]
# ucx-py-cu11 = "<=0.30"
# rmm-cu11 = "23.2.0"
# raft-dask-cu11 = "23.2.0"
# pylibraft-cu11 = "23.2.0"
# dask-cudf-cu11 = "23.2.0"
# cudf-cu11 = "23.2.0"
# cuml-cu11 = "23.2.0"

[tool.poetry.group.doc.dependencies]
furo = "*"
sphinx = "*"
sphinx-autodoc-typehints = "*"
myst-parser = "*"
sphinx-markdown-builder = "*"
sphinx-autobuild = "*"

[tool.poetry.group.test.dependencies]
ultralytics = "*"
lightning = "*"
pytest = ">=7.2.1"
freezegun = ">=1.2.2"
coverage = { version = ">=7.0.5", extras = ["toml"] }
pytest-cov = ">=4.0.0"
scikit-learn = ">=1.0"
tensorflow = ">=2.9.1"
pytest-env = ">=0.8.1"
pytest-xdist = ">=2.4.0"
types-setuptools = ">=67.3.0.1"
types-cachetools = ">=4.2.4"
torchvision = ">=0.13.1"
torch = ">=2.0.0, !=2.0.1, !=2.1.0"
torchtext = ">=0.13.1"
torchdata = ">=0.4.1"
xgboost = ">=1.6.2"
timm = ">=0.6.12"
fastai = ">=2.7.11"
portalocker = "2.7.0"
types-PyYAML = "6.0.12.9"
accelerate = ">=0.19.0"
typing-inspect = "0.8.0"
typing-extensions = "4.0.0"


[tool.poetry.group.minio.dependencies]
minio = ">=7.1.0,<7.2.0"

[tool.poetry.group.setfit.dependencies]
setfit = "*"

[tool.pytest.ini_options]
env = ["GALILEO_API_URL=http://localhost:8000"]
addopts = [
    "-n",
    "auto",
    "-o",
    "console_output_style=progress",
    "--durations=10",
    "--disable-warnings",
    "--cov=dataquality",
    "--cov=tests",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-report=html",
]

[tool.coverage.run]
parallel = true
source = ["dataquality/", "tests/"]
omit = ["*__init__.py", "*metrics.py"]

[tool.coverage.report]
exclude_lines = ['pragma: no cover', 'raise NotImplementedError']

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true

[tool.ruff]
line-length = 88
ignore = ["D10"]
include = ["*.py"]
select = ["E", "F", "I"]
target-version = "py310"
extend-ignore = [
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
    "D415",
    "E731",
]

[tool.black]
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.*_cache
  | \.tox
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''
